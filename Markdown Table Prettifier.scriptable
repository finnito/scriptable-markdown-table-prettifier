{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "green",
    "glyph" : "code"
  },
  "name" : "Markdown Table Prettifier",
  "script" : "\/**\n * Author: Finn Le Sueur\n * Website: https:\/\/finn.lesueur.nz\n * Gitlab: https:\/\/gitlab.com\/Finnito\/scriptable-markdown-table-prettifier\n *\n * This is the raw script that goes into\n * the Scriptable action so that it can\n * be run from the share sheet.\n **\/\n\n \/*global Script Pasteboard args *\/\n\nfunction formatTables(lines, tableIndices) {\n    'use strict';\n    var i,\n        j,\n        k,\n        columnSizes = [],\n        tr,\n        td,\n        firstSplitLine,\n        numColumns,\n        splitLine;\n\n    \/\/ Iterate each table indices\n    for (i = 0; i < tableIndices.length; i += 1) {\n\n        \/\/ Iterate the lines for each table\n        firstSplitLine = lines[tableIndices[i][0]].split(\"|\");\n        numColumns = firstSplitLine.slice(1, firstSplitLine.length - 1).length;\n        columnSizes = Array.apply(null, new Array(numColumns)).map(Number.prototype.valueOf, 0);\n        for (j = tableIndices[i][0]; j <= tableIndices[i][1]; j += 1) {\n\n            \/\/ Find out how many columns there are\n            splitLine = lines[j].split(\"|\");\n            splitLine = splitLine.slice(1, splitLine.length - 1);\n            \/\/ Find the largest size of each column\n            for (k = 0; k < splitLine.length; k += 1) {\n                td = splitLine[k].trim();\n                if (td[0] !== \"-\") {\n                    if (td.length > columnSizes[k]) {\n                        columnSizes[k] = td.length;\n                    }\n                }\n            }\n        }\n\n        \/\/ Pad out the cells\n        for (j = tableIndices[i][0]; j <= tableIndices[i][1]; j += 1) {\n            \/\/ Find out how many columns there are\n            splitLine = lines[j].split(\"|\");\n            splitLine = splitLine.slice(1, splitLine.length - 1);\n            \/\/ Find the largest size of each column\n            tr = \"|\";\n            for (k = 0; k < splitLine.length; k += 1) {\n                td = splitLine[k].trim();\n                if (td[0] !== \"-\") {\n                    tr += \" \";\n                    tr += td;\n                    tr += \" \".repeat(columnSizes[k] - td.length);\n                    tr += \" |\";\n                } else {\n                    tr += \"-\".repeat(columnSizes[k] + 2);\n                    tr += \"|\";\n                }\n            }\n            lines[j] = tr;\n        }\n    }\n    return lines;\n}\n\nfunction findTables(lines) {\n    'use strict';\n    var i,\n        tables = [],\n        tableStart = false,\n        tableEnd = false;\n    for (i = 0; i < lines.length; i += 1) {\n        if (lines[i][0] === \"|\") {\n            if (!tableStart) {\n                tableStart = i;\n            }\n        }\n        if ((lines[i] === \"\") && (tableStart !== false)) {\n            tableEnd = i - 1;\n            tables.push([tableStart, tableEnd]);\n            tableStart = false;\n            tableEnd = false;\n        }\n    }\n    return tables;\n}\n\nfunction main() {\n    'use strict';\n    var text = args.plainTexts[0];\n    var lines = text.split(\"\\n\");\n    var tableIndices = findTables(lines);\n    lines = formatTables(lines, tableIndices);\n    Pasteboard.copy(lines.join(\"\\n\"));\n    Script.complete();\n}\n\nmain();",
  "share_sheet_inputs" : [
    "plain-text"
  ]
}